/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ResetPasswordIndexImport } from './routes/reset-password/index'
import { Route as AIndexImport } from './routes/a/index'
import { Route as ResetPasswordCodeImport } from './routes/reset-password/$code'
import { Route as ALayoutImport } from './routes/a/_layout'
import { Route as ALayoutStatsIndexImport } from './routes/a/_layout/stats/index'
import { Route as ALayoutCalendarIndexImport } from './routes/a/_layout/calendar/index'
import { Route as ALayoutSettingsChangePasswordIndexImport } from './routes/a/_layout/settings/change-password/index'
import { Route as ALayoutObjectsIdIndexImport } from './routes/a/_layout/objects/$id/index'
import { Route as ALayoutRoomsIdEditImport } from './routes/a/_layout/rooms/$id/edit'
import { Route as ALayoutObjectsIdRoomsIndexImport } from './routes/a/_layout/objects/$id/rooms/index'

// Create Virtual Routes

const AImport = createFileRoute('/a')()
const VerifyEmailLazyImport = createFileRoute('/verify-email')()
const RegisterLazyImport = createFileRoute('/register')()
const LoginLazyImport = createFileRoute('/login')()
const IndexLazyImport = createFileRoute('/')()
const ALayoutSettingsIndexLazyImport = createFileRoute('/a/_layout/settings/')()
const ALayoutObjectsIndexLazyImport = createFileRoute('/a/_layout/objects/')()
const ALayoutSettingsPersonalInformationIndexLazyImport = createFileRoute(
  '/a/_layout/settings/personal-information/',
)()
const ALayoutObjectsIdEditLazyImport = createFileRoute(
  '/a/_layout/objects/$id/edit',
)()

// Create/Update Routes

const ARoute = AImport.update({
  path: '/a',
  getParentRoute: () => rootRoute,
} as any)

const VerifyEmailLazyRoute = VerifyEmailLazyImport.update({
  path: '/verify-email',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/verify-email.lazy').then((d) => d.Route))

const RegisterLazyRoute = RegisterLazyImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/register.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ResetPasswordIndexRoute = ResetPasswordIndexImport.update({
  path: '/reset-password/',
  getParentRoute: () => rootRoute,
} as any)

const AIndexRoute = AIndexImport.update({
  path: '/',
  getParentRoute: () => ARoute,
} as any)

const ResetPasswordCodeRoute = ResetPasswordCodeImport.update({
  path: '/reset-password/$code',
  getParentRoute: () => rootRoute,
} as any)

const ALayoutRoute = ALayoutImport.update({
  id: '/_layout',
  getParentRoute: () => ARoute,
} as any)

const ALayoutSettingsIndexLazyRoute = ALayoutSettingsIndexLazyImport.update({
  path: '/settings/',
  getParentRoute: () => ALayoutRoute,
} as any).lazy(() =>
  import('./routes/a/_layout/settings/index.lazy').then((d) => d.Route),
)

const ALayoutObjectsIndexLazyRoute = ALayoutObjectsIndexLazyImport.update({
  path: '/objects/',
  getParentRoute: () => ALayoutRoute,
} as any).lazy(() =>
  import('./routes/a/_layout/objects/index.lazy').then((d) => d.Route),
)

const ALayoutStatsIndexRoute = ALayoutStatsIndexImport.update({
  path: '/stats/',
  getParentRoute: () => ALayoutRoute,
} as any)

const ALayoutCalendarIndexRoute = ALayoutCalendarIndexImport.update({
  path: '/calendar/',
  getParentRoute: () => ALayoutRoute,
} as any)

const ALayoutSettingsPersonalInformationIndexLazyRoute =
  ALayoutSettingsPersonalInformationIndexLazyImport.update({
    path: '/settings/personal-information/',
    getParentRoute: () => ALayoutRoute,
  } as any).lazy(() =>
    import('./routes/a/_layout/settings/personal-information/index.lazy').then(
      (d) => d.Route,
    ),
  )

const ALayoutSettingsChangePasswordIndexRoute =
  ALayoutSettingsChangePasswordIndexImport.update({
    path: '/settings/change-password/',
    getParentRoute: () => ALayoutRoute,
  } as any)

const ALayoutObjectsIdIndexRoute = ALayoutObjectsIdIndexImport.update({
  path: '/objects/$id/',
  getParentRoute: () => ALayoutRoute,
} as any)

const ALayoutObjectsIdEditLazyRoute = ALayoutObjectsIdEditLazyImport.update({
  path: '/objects/$id/edit',
  getParentRoute: () => ALayoutRoute,
} as any).lazy(() =>
  import('./routes/a/_layout/objects/$id/edit.lazy').then((d) => d.Route),
)

const ALayoutRoomsIdEditRoute = ALayoutRoomsIdEditImport.update({
  path: '/rooms/$id/edit',
  getParentRoute: () => ALayoutRoute,
} as any)

const ALayoutObjectsIdRoomsIndexRoute = ALayoutObjectsIdRoomsIndexImport.update(
  {
    path: '/objects/$id/rooms/',
    getParentRoute: () => ALayoutRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      preLoaderRoute: typeof RegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/verify-email': {
      preLoaderRoute: typeof VerifyEmailLazyImport
      parentRoute: typeof rootRoute
    }
    '/a': {
      preLoaderRoute: typeof AImport
      parentRoute: typeof rootRoute
    }
    '/a/_layout': {
      preLoaderRoute: typeof ALayoutImport
      parentRoute: typeof ARoute
    }
    '/reset-password/$code': {
      preLoaderRoute: typeof ResetPasswordCodeImport
      parentRoute: typeof rootRoute
    }
    '/a/': {
      preLoaderRoute: typeof AIndexImport
      parentRoute: typeof AImport
    }
    '/reset-password/': {
      preLoaderRoute: typeof ResetPasswordIndexImport
      parentRoute: typeof rootRoute
    }
    '/a/_layout/calendar/': {
      preLoaderRoute: typeof ALayoutCalendarIndexImport
      parentRoute: typeof ALayoutImport
    }
    '/a/_layout/stats/': {
      preLoaderRoute: typeof ALayoutStatsIndexImport
      parentRoute: typeof ALayoutImport
    }
    '/a/_layout/objects/': {
      preLoaderRoute: typeof ALayoutObjectsIndexLazyImport
      parentRoute: typeof ALayoutImport
    }
    '/a/_layout/settings/': {
      preLoaderRoute: typeof ALayoutSettingsIndexLazyImport
      parentRoute: typeof ALayoutImport
    }
    '/a/_layout/rooms/$id/edit': {
      preLoaderRoute: typeof ALayoutRoomsIdEditImport
      parentRoute: typeof ALayoutImport
    }
    '/a/_layout/objects/$id/edit': {
      preLoaderRoute: typeof ALayoutObjectsIdEditLazyImport
      parentRoute: typeof ALayoutImport
    }
    '/a/_layout/objects/$id/': {
      preLoaderRoute: typeof ALayoutObjectsIdIndexImport
      parentRoute: typeof ALayoutImport
    }
    '/a/_layout/settings/change-password/': {
      preLoaderRoute: typeof ALayoutSettingsChangePasswordIndexImport
      parentRoute: typeof ALayoutImport
    }
    '/a/_layout/settings/personal-information/': {
      preLoaderRoute: typeof ALayoutSettingsPersonalInformationIndexLazyImport
      parentRoute: typeof ALayoutImport
    }
    '/a/_layout/objects/$id/rooms/': {
      preLoaderRoute: typeof ALayoutObjectsIdRoomsIndexImport
      parentRoute: typeof ALayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  LoginLazyRoute,
  RegisterLazyRoute,
  VerifyEmailLazyRoute,
  ARoute.addChildren([
    ALayoutRoute.addChildren([
      ALayoutCalendarIndexRoute,
      ALayoutStatsIndexRoute,
      ALayoutObjectsIndexLazyRoute,
      ALayoutSettingsIndexLazyRoute,
      ALayoutRoomsIdEditRoute,
      ALayoutObjectsIdEditLazyRoute,
      ALayoutObjectsIdIndexRoute,
      ALayoutSettingsChangePasswordIndexRoute,
      ALayoutSettingsPersonalInformationIndexLazyRoute,
      ALayoutObjectsIdRoomsIndexRoute,
    ]),
    AIndexRoute,
  ]),
  ResetPasswordCodeRoute,
  ResetPasswordIndexRoute,
])

/* prettier-ignore-end */
